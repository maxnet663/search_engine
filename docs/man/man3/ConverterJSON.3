.TH "ConverterJSON" 3 "Mon Oct 2 2023" "Search Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ConverterJSON
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <converter_json\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConverterJSON\fP (const \fBConverterJSON\fP &other)=default"
.br
.ti -1c
.RI "\fBConverterJSON\fP (\fBConverterJSON\fP &&other) noexcept=default"
.br
.ti -1c
.RI "\fBConverterJSON\fP & \fBoperator=\fP (const \fBConverterJSON\fP &right)=default"
.br
.ti -1c
.RI "\fBConverterJSON\fP & \fBoperator=\fP (\fBConverterJSON\fP &&right) noexcept=default"
.br
.ti -1c
.RI "\fBConverterJSON\fP (const std::string &jsons_dir)"
.br
.ti -1c
.RI "\fBConverterJSON\fP (std::string path_first, std::string path_second)"
.br
.ti -1c
.RI "const json & \fBgetConfig\fP () const"
.br
.ti -1c
.RI "std::vector< std::string > \fBgetRequests\fP () const"
.br
.ti -1c
.RI "std::vector< std::string > \fBgetTextDocuments\fP () const"
.br
.ti -1c
.RI "int \fBgetResponsesLimit\fP () const"
.br
.ti -1c
.RI "void \fBputAnswers\fP (const std::vector< answer_t > &answers) const"
.br
.ti -1c
.RI "void \fBupdateConfig\fP (const std::string &path='')"
.br
.ti -1c
.RI "void \fBupdateRequests\fP (const std::string &path='')"
.br
.ti -1c
.RI "std::string \fBgetConfigPath\fP () const"
.br
.ti -1c
.RI "std::string \fBgetRequestsPath\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static json \fBopenJson\fP (const std::string &path)"
.br
.ti -1c
.RI "static int \fBwriteJsonToFile\fP (json &json_obj, const std::string &path)"
.br
.ti -1c
.RI "static std::string \fBfindFileRecursive\fP (const std::string &file_name, const std::string &dir='\&.')"
.br
.ti -1c
.RI "static std::string \fBfindFile\fP (const std::string &file_name, const std::string &dir='\&.')"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class for working with json files 
.SH "Member Function Documentation"
.PP 
.SS "std::string ConverterJSON::findFile (const std::string & file_name, const std::string & dir = \fC'\&.'\fP)\fC [static]\fP"
Searches for file_name in current directory and in directories such as json, jsons, JSON, JSONS 
.PP
\fBParameters\fP
.RS 4
\fIfile_name\fP name of the file to find 
.RE
.PP
\fBReturns\fP
.RS 4
absolute path to a file or empty string 
.RE
.PP

.SS "std::string ConverterJSON::findFileRecursive (const std::string & file_name, const std::string & dir = \fC'\&.'\fP)\fC [static]\fP"
Searches for file_name in directory tree with root in dir 
.PP
\fBParameters\fP
.RS 4
\fIfile_name\fP name of the file 
.br
\fIdir\fP start dir, default: current dir 
.RE
.PP
\fBReturns\fP
.RS 4
absolute path to a file or empty string 
.RE
.PP

.SS "const json& ConverterJSON::getConfig () const\fC [inline]\fP"
Config getter 
.PP
\fBReturns\fP
.RS 4
json object config\&.json 
.RE
.PP

.SS "std::string ConverterJSON::getConfigPath () const\fC [inline]\fP"
config_path getter 
.PP
\fBReturns\fP
.RS 4
config_path member 
.RE
.PP

.SS "std::vector< std::string > ConverterJSON::getRequests () const"
Method for receiving requests from the requests\&.json file 
.PP
\fBReturns\fP
.RS 4
a list of requests from the requests\&.json file 
.RE
.PP

.SS "std::string ConverterJSON::getRequestsPath () const\fC [inline]\fP"
requests_path getter 
.PP
\fBReturns\fP
.RS 4
requests_path member 
.RE
.PP

.SS "int ConverterJSON::getResponsesLimit () const"
The method reads the max_responses field to determine the limit number of responses per request 
.PP
\fBReturns\fP
.RS 4
max_responses 
.RE
.PP

.SS "std::vector< std::string > ConverterJSON::getTextDocuments () const"

.PP
\fBReturns\fP
.RS 4
a list with the paths to documents to search in config\&.json 
.RE
.PP

.SS "json ConverterJSON::openJson (const std::string & path)\fC [static]\fP"
Creates json object from a file under path\&. Before creating check if file exists, perms to read and file's extension(must be *\&.json) 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP path to the file 
.RE
.PP
\fBReturns\fP
.RS 4
json object 
.RE
.PP

.SS "void ConverterJSON::putAnswers (const std::vector< answer_t > & answers) const"
Method writes answers to the file answers\&.json in json format 
.PP
\fBParameters\fP
.RS 4
\fIanswer\fP a data array containing answers to queries to the database of indexed documents 
.RE
.PP

.SS "void ConverterJSON::updateConfig (const std::string & path = \fC''\fP)"
Overwrites the current config file according to the path 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP path to json file 
.RE
.PP

.SS "void ConverterJSON::updateRequests (const std::string & path = \fC''\fP)"
Overwrites the current requests file according to the path 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP path to json file 
.RE
.PP

.SS "int ConverterJSON::writeJsonToFile (json & json_obj, const std::string & path)\fC [static]\fP"
If file path exists overwriting it by file, create new file in path otherwise 
.PP
\fBParameters\fP
.RS 4
\fIfile\fP file to write 
.br
\fIpath\fP path to new file 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Search Engine from the source code\&.
